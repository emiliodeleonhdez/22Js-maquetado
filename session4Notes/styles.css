*{
    margin: 0px;
    padding: 0px;
    box-sizing: border-box;
}

body {
    font-family: 'Roboto', sans-serif;
}

.block__title--green {
    color: green;
}

.block__subtitle--blue {
    color: blue;
}

.block-examples > div {
    width: 90px;
    height: 90px;
    border: 2px solid black;
    margin: 10px;
}

.block-examples { 
    display: flex;
    width: 100%;
    height: 700vh;
}

/* La posición por default de los elementos HTML es estática (static en inglés)
Es importante mencionar que los elementos estáticos no están afectados por las propiedades top, bottom, left y right
Un elemento estático no está posicionado de ninguna manera en especial, este sigue el flujo normal de la página.  */

.block-example__static--yellow {
    background-color: yellow;
    position: static;
}

/* Un elemento con position relative es un elemento posicionado de manera relativa a su posición normal
Aplicarle las propiedades de top, right, bottom, y left ajustarían la posición del elemento */

.block-example__relative--hotpink {
    background-color: hotpink;
    position: relative;
    top: 40px; left: 40px;
}

/* Un elemento con position fixed es relativo al viewport, esto quiere decir que el elemento se quedará siempre en el mismo lugar
Aplicarle las propiedades de top, right, bottom, y left ajustarían la posición del elemento */

.block-example__fixed--blue {
    background-color: blue;
    position: fixed;
    top: 40px; left: 40px;

}

/* An element with position: absolute; is positioned relative to the nearest positioned ancestor (instead of positioned relative to the viewport, like fixed).
However; if an absolute positioned element has no positioned ancestors, it uses the document body, and moves along with page scrolling.
Note: Absolute positioned elements are removed from the normal flow, and can overlap elements. */

.block-example__absolute--red {
    background-color: red;
    position: absolute;
    top: 40px; left: 40px;
}

/* An element with position: sticky; is positioned based on the user's scroll position.
A sticky element toggles between relative and fixed, depending on the scroll position. It is positioned relative until a given offset position is met in the viewport - then it "sticks" in place (like position:fixed). */

.block-example__sticky--purple {
    background-color: purple;
    position: sticky;
    top: 20px;
}

.img-coffee__z-index-blur {
    width: 300px;
    height: 200px;
    margin: 10px;
    position: absolute;
    z-index: -1;

}

.button-key-frames { 
    width: 144px;
    height: 42px;
    background-color: blue;
    color: rgb(255, 255, 255);
    margin: 20px;
    border-radius: 10px;
    cursor: pointer;
    border: none;
}

.button-key-frames:hover {
    animation-name: example;
    animation-duration: 3s;

}
    @keyframes example {
        0% {background-color: blue;}
        25% {background-color: red;}
        25% {background-color: orange;}
        50% {background-color: yellow;}
        75% {background-color: green;}
        100% {background-color: purple}
    }

.block-example-2D-transforms { 
    width: 90px;
    height: 90px;
    background-color: blueviolet;
    border: 1px solid black;
    margin: 20px;
    color: white;
    /* The following example moves the <div> element 50 pixels to the right, and 100 pixels down from its current position: */
    /* transform: translate(50px, 100px); */

    /* The following example rotates the <div> element clockwise with 20 degrees: */
    /* transform: rotate(20deg); */

    /* The following example increases the <div> element to be two times of its original width, and three times of its original height:  */
    /* transform: scale(2, 3); */

    /* The following example increases the <div> element to be two times of its original width:  */
    /* transform: scaleX(2); */

    /* The following example increases the <div> element to be three times of its original height:  */
    /* transform: scaleY(3); */

}

.card__plan--red{
    width: 250px;
    height: 400px;
    background-color: #ff416c;
    border-radius: 15px;
    margin-left: 20px;
}

.button-subscribe__transition--4s{
    margin-left: 10px;
    border: none;
    width: 180px;
    position: relative;
    border-radius: 15px 0 15px 0;
    height: 40px;
    background-color: rgb(0, 47, 255);
    text-transform: uppercase;
    font-weight: bold;
    cursor: pointer;
    transition-duration: 500ms;
    transition: all 0.4s ease;
}


.button-subscribe__transition--4s:hover {
    width: 240px;
}